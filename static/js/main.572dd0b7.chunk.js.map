{"version":3,"sources":["reducers/QuizReducer.js","contexts/QuizContext.js","components/StyledComponents/StyledTypography.js","components/Quiz/QuizHeader.js","components/Quiz/QuizAnswer.js","components/Quiz/Quiz.js","components/Results/Results.js","components/StyledComponents/StyledButtons.js","components/StartMenu.js","components/StyledComponents/StyledContainers.js","App.js","serviceWorker.js","index.js"],"names":["initialState","question","correctAnswer","answers","number","questionAmount","status","score","questions","category","quizReducer","state","action","type","map","answer","disabled","index","selectedAnswer","Error","QuizContext","React","createContext","QuizContextProvider","props","useReducer","dispatch","Provider","value","children","TextCentered","styled","Typography","TextRight","QuestionText","QuizHeader","useContext","Grid","container","spacing","justify","xs","item","variant","dangerouslySetInnerHTML","__html","AnswerButton","Button","QuizAnswer","useState","setStatus","fullWidth","onClick","setTimeout","text","id","Math","random","CenteredCircularProgress","CircularProgress","Quiz","loading","setLoading","quizContext","useEffect","fetch","then","response","json","responseData","newQuestions","results","newQuestion","key","incorrect_answers","correct_answer","floor","length","splice","alignItems","thickness","size","color","md","ActionButton","Results","sm","PrimaryButton","CategoryFormControl","FormControl","StartMenu","InputLabel","Select","labelId","style","backgroundColor","onChange","event","target","MenuItem","QuizContainer","Paper","App","display","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.572dd0b7.chunk.js","sourcesContent":["export const initialState = {\r\n\tquestion: 'INITIAL QUESTION',\r\n\tcorrectAnswer: '',\r\n\tanswers: [],\r\n\tnumber: 1,\r\n\tquestionAmount: 0,\r\n\tstatus: 0,\r\n\tscore: 0,\r\n\tquestions: [],\r\n\tcategory: 9\r\n};\r\n\r\nconst quizReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_INITIAL_QUESTION':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestion: action.question,\r\n\t\t\t\tcorrectAnswer: action.correctAnswer,\r\n\t\t\t\tanswers: action.answers,\r\n\t\t\t\tquestionAmount: action.questionAmount,\r\n\t\t\t\tquestions: action.questions\r\n\t\t\t};\r\n\t\tcase 'DISABLE_ANSWERS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswers: state.answers.map(answer => {\r\n\t\t\t\t\treturn { ...answer, disabled: true };\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tcase 'SET_CURRENT_NUMBER':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnumber: state.number + action.number\r\n\t\t\t};\r\n\t\tcase 'SET_MAX_NUMBER':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestionAmount: action.questionAmount\r\n\t\t\t};\r\n\t\tcase 'INCREMENT_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tscore: state.score + action.score\r\n\t\t\t};\r\n\t\tcase 'NEXT_QUESTION':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestion: action.question,\r\n\t\t\t\tnumber: state.number + 1,\r\n\t\t\t\tcorrectAnswer: action.correctAnswer,\r\n\t\t\t\tanswers: action.answers,\r\n\t\t\t\tquestions: state.questions.map((question, index) => {\r\n\t\t\t\t\treturn index === state.number - 1\r\n\t\t\t\t\t\t? { ...question, selectedAnswer: action.selectedAnswer }\r\n\t\t\t\t\t\t: question;\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tcase 'COMPLETE_QUIZ':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: 1\r\n\t\t\t};\r\n\t\tcase 'RESTART':\r\n\t\t\treturn {\r\n\t\t\t\t...initialState,\r\n\t\t\t\tstatus: 2,\r\n\t\t\t\tcategory: state.category\r\n\t\t\t};\r\n\t\tcase 'GO_HOME':\r\n\t\t\treturn {\r\n\t\t\t\t...initialState,\r\n\t\t\t\tstatus: 0\r\n\t\t\t};\r\n\t\tcase 'PLAY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: 2\r\n\t\t\t};\r\n\t\tcase 'SELECT_CATEGORY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory: action.category\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n};\r\n\r\nexport default quizReducer;\r\n","import React, { useReducer } from 'react';\r\nimport quizReducer, { initialState } from '../reducers/QuizReducer';\r\n\r\nexport const QuizContext = React.createContext();\r\n\r\nconst QuizContextProvider = props => {\r\n\tconst [state, dispatch] = useReducer(quizReducer, initialState);\r\n\r\n\treturn (\r\n\t\t<QuizContext.Provider value={{ state: state, dispatch: dispatch }}>\r\n\t\t\t{props.children}\r\n\t\t</QuizContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default QuizContextProvider;\r\n","import { Typography } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nexport const TextCentered = styled(Typography)`\r\n\ttext-align: center;\r\n\tfont-weight: bold;\r\n`;\r\n\r\nexport const TextRight = styled(Typography)`\r\n\ttext-align: right;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport { QuizContext } from '../../contexts/QuizContext';\r\nimport { TextCentered, TextRight } from '../StyledComponents/StyledTypography';\r\nimport styled from 'styled-components';\r\n\r\nconst QuestionText = styled(TextCentered)`\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst QuizHeader = props => {\r\n\tconst quizContext = useContext(QuizContext);\r\n\tconst { question, number, questionAmount, score } = quizContext.state;\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={4} justify=\"center\">\r\n\t\t\t<Grid xs={12} item container>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\tQuestions {number}/{questionAmount}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<TextRight variant=\"h6\">Score: {score}</TextRight>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid xs={12} item>\r\n\t\t\t\t<QuestionText variant=\"h5\" dangerouslySetInnerHTML={{ __html: question }}></QuestionText>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default QuizHeader;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst AnswerButton = styled(Button)`\r\n\t&& {\r\n\t\tbackground-color: ${props => {\r\n\t\t\tif (props.status === 'neutral') {\r\n\t\t\t\treturn '#fafafa';\r\n\t\t\t} else if (props.status === 'wrong') {\r\n\t\t\t\treturn '#f44336';\r\n\t\t\t} else {\r\n\t\t\t\treturn '#66bb6a';\r\n\t\t\t}\r\n\t\t}};\r\n\r\n\t\t:disabled {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst QuizAnswer = props => {\r\n\tconst [status, setStatus] = useState('neutral');\r\n\tconst { correctAnswer, number, questionAmount } = props.state;\r\n\tconst dispatch = props.dispatch;\r\n\r\n\tconst clickHandler = answer => {\r\n\t\tif (answer === correctAnswer) {\r\n\t\t\tsetStatus('right');\r\n\t\t\tdispatch({ type: 'INCREMENT_SCORE', score: 10 });\r\n\t\t} else {\r\n\t\t\tsetStatus('wrong');\r\n\t\t}\r\n\t\tdispatch({ type: 'DISABLE_ANSWERS' });\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (number < questionAmount) {\r\n\t\t\t\tsetStatus('neutral');\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'NEXT_QUESTION',\r\n\t\t\t\t\tanswers: props.questions[number].answers.map(answer => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttext: answer,\r\n\t\t\t\t\t\t\tid: Math.random(),\r\n\t\t\t\t\t\t\tdisabled: false\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tcorrectAnswer: props.questions[number].correctAnswer,\r\n\t\t\t\t\tquestion: props.questions[number].text,\r\n\t\t\t\t\tselectedAnswer: correctAnswer\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdispatch({ type: 'COMPLETE_QUIZ' });\r\n\t\t\t}\r\n\t\t}, 500);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AnswerButton\r\n\t\t\tstatus={status}\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tfullWidth\r\n\t\t\tdisabled={props.disabled}\r\n\t\t\tonClick={() => clickHandler(props.answer)}\r\n\t\t>\r\n\t\t\t{<span dangerouslySetInnerHTML={{ __html: props.answer }}></span>}\r\n\t\t</AnswerButton>\r\n\t);\r\n};\r\n\r\nexport default QuizAnswer;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { QuizContext } from '../../contexts/QuizContext';\r\nimport QuizHeader from './QuizHeader';\r\nimport QuizAnswer from './QuizAnswer';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nconst CenteredCircularProgress = styled(CircularProgress)`\r\n\t&& {\r\n\t\tmargin-top: 3em;\r\n\t\tmargin-bottom: 3em;\r\n\t}\r\n`;\r\n\r\nconst Quiz = props => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst quizContext = useContext(QuizContext);\r\n\tconst { number, answers, questions, category } = quizContext.state;\r\n\tconst dispatch = quizContext.dispatch;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tfetch(`https://opentdb.com/api.php?amount=10&category=${category}`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(responseData => {\r\n\t\t\t\tconst newQuestions = responseData.results.map(question => {\r\n\t\t\t\t\tconst newQuestion = {\r\n\t\t\t\t\t\tkey: Math.random(),\r\n\t\t\t\t\t\ttext: question.question,\r\n\t\t\t\t\t\tanswers: question.incorrect_answers,\r\n\t\t\t\t\t\tcorrectAnswer: question.correct_answer,\r\n\t\t\t\t\t\tselectedAnswer: ''\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconst index = Math.floor(\r\n\t\t\t\t\t\tMath.random() * newQuestion.answers.length\r\n\t\t\t\t\t);\r\n\t\t\t\t\tnewQuestion.answers.splice(\r\n\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\tnewQuestion.correctAnswer\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn newQuestion;\r\n\t\t\t\t});\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'SET_INITIAL_QUESTION',\r\n\t\t\t\t\tquestion: newQuestions[number - 1].text,\r\n\t\t\t\t\tquestionAmount: newQuestions.length,\r\n\t\t\t\t\tcorrectAnswer: newQuestions[number - 1].correctAnswer,\r\n\t\t\t\t\tquestions: newQuestions,\r\n\t\t\t\t\tanswers: newQuestions[number - 1].answers.map(answer => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttext: answer,\r\n\t\t\t\t\t\t\tid: Math.random(),\r\n\t\t\t\t\t\t\tdisabled: false\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={4} justify=\"center\" alignItems=\"center\">\r\n\t\t\t{loading ? (\r\n\t\t\t\t<CenteredCircularProgress\r\n\t\t\t\t\tthickness={5}\r\n\t\t\t\t\tsize=\"5rem\"\r\n\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<QuizHeader></QuizHeader>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item spacing={4} justify=\"center\">\r\n\t\t\t\t\t\t{answers.map(answer => (\r\n\t\t\t\t\t\t\t<Grid item md={6} xs={12} key={answer.id}>\r\n\t\t\t\t\t\t\t\t<QuizAnswer\r\n\t\t\t\t\t\t\t\t\tanswer={answer.text}\r\n\t\t\t\t\t\t\t\t\tquestions={questions}\r\n\t\t\t\t\t\t\t\t\tid={answer.id}\r\n\t\t\t\t\t\t\t\t\tdisabled={answer.disabled}\r\n\t\t\t\t\t\t\t\t\tstate={quizContext.state}\r\n\t\t\t\t\t\t\t\t\tdispatch={quizContext.dispatch}\r\n\t\t\t\t\t\t\t\t></QuizAnswer>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { useContext } from 'react';\r\nimport { QuizContext } from '../../contexts/QuizContext';\r\nimport { TextCentered } from '../StyledComponents/StyledTypography';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n// import QuestionSummary from './QuestionSummary';\r\n\r\nconst ActionButton = styled(Button)`\r\n\t&& {\r\n\t\tbackground-color: #fafafa;\r\n\t\tfont-size: 1.1em;\r\n\t}\r\n`;\r\n\r\nconst Results = props => {\r\n\tconst quizContext = useContext(QuizContext);\r\n\tconst { score } = quizContext.state;\r\n\tconst dispatch = quizContext.dispatch;\r\n\r\n\tconst onPlayAgainHandler = () => {\r\n\t\tdispatch({ type: 'RESTART' });\r\n\t};\r\n\r\n\tconst onGoHomeHandler = () => {\r\n\t\tdispatch({ type: 'GO_HOME' });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\" spacing={3}>\r\n\t\t\t<Grid item sm={12}>\r\n\t\t\t\t<TextCentered variant=\"h6\">You scored:</TextCentered>\r\n\t\t\t\t<TextCentered variant=\"h4\">{score}</TextCentered>\r\n\t\t\t</Grid>\r\n\t\t\t{/* {questions.map(question => (\r\n\t\t\t\t<QuestionSummary\r\n\t\t\t\t\tkey={question.key}\r\n\t\t\t\t\tanswer={question.selectedAnswer}\r\n\t\t\t\t\tcorrectAnswer={question.correctAnswer}\r\n\t\t\t\t\tquestion={question.text}\r\n\t\t\t\t></QuestionSummary>\r\n\t\t\t))} */}\r\n\t\t\t<Grid container item spacing={2}>\r\n\t\t\t\t<Grid item sm={12} container justify=\"center\">\r\n\t\t\t\t\t<ActionButton\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\tonClick={onPlayAgainHandler}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPlay Again\r\n\t\t\t\t\t</ActionButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item sm={12} container justify=\"center\">\r\n\t\t\t\t\t<ActionButton\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\tonClick={onGoHomeHandler}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGo Home\r\n\t\t\t\t\t</ActionButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Results;\r\n","import { Button } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nexport const PrimaryButton = styled(Button)`\r\n\t&& {\r\n\t\tbackground-color: #fafafa;\r\n\t\tfont-size: 1.3rem;\r\n\t\tpadding-left: 2rem;\r\n\t\tpadding-right: 2rem;\r\n\t}\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { QuizContext } from '../contexts/QuizContext';\r\nimport {\r\n\tGrid,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem\r\n} from '@material-ui/core';\r\nimport { TextCentered } from './StyledComponents/StyledTypography';\r\nimport { PrimaryButton } from './StyledComponents/StyledButtons';\r\nimport styled from 'styled-components';\r\n\r\nconst CategoryFormControl = styled(FormControl)`\r\n\t&& {\r\n\t\tmin-width: 150px;\r\n\t\topacity: 1;\r\n\t}\r\n`;\r\n\r\nconst StartMenu = props => {\r\n\tconst quizContext = useContext(QuizContext);\r\n\tconst { category } = quizContext.state;\r\n\tconst dispatch = quizContext.dispatch;\r\n\r\n\tconst onPlayHandler = () => {\r\n\t\tdispatch({ type: 'PLAY' });\r\n\t};\r\n\r\n\tconst onSelectHandler = event => {\r\n\t\tdispatch({ type: 'SELECT_CATEGORY', category: event.target.value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={2}>\r\n\t\t\t<Grid item xs={12} container justify=\"center\">\r\n\t\t\t\t<TextCentered variant=\"h4\">The Quiz</TextCentered>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} container justify=\"center\">\r\n\t\t\t\t<CategoryFormControl variant=\"filled\" color=\"secondary\">\r\n\t\t\t\t\t<InputLabel id=\"category-select-label\">Category</InputLabel>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tlabelId=\"category-select-label\"\r\n\t\t\t\t\t\tid=\"category-select\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: '#fafafa' }}\r\n\t\t\t\t\t\tvalue={category}\r\n\t\t\t\t\t\tonChange={onSelectHandler}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuItem value={9}>General Knowledge</MenuItem>\r\n\t\t\t\t\t\t<MenuItem value={18}>Computers</MenuItem>\r\n\t\t\t\t\t\t<MenuItem value={31}>Anime</MenuItem>\r\n\t\t\t\t\t\t<MenuItem value={21}>Sports</MenuItem>\r\n\t\t\t\t\t\t<MenuItem value={23}>History</MenuItem>\r\n\t\t\t\t\t\t<MenuItem value={24}>Politics</MenuItem>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</CategoryFormControl>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} container justify=\"center\">\r\n\t\t\t\t<PrimaryButton\r\n\t\t\t\t\tonClick={onPlayHandler}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t>\r\n\t\t\t\t\tPlay\r\n\t\t\t\t</PrimaryButton>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default StartMenu;\r\n","import { Paper } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nexport const QuizContainer = styled(Paper)`\r\n\t&& {\r\n\t\tpadding: 2em 2em 2em 2em;\r\n\t\tmargin-top: 3em;\r\n\t\tbackground-color: #e0e0e0;\r\n\t}\r\n`;\r\n\r\nexport const LightPaper = styled(Paper)`\r\n\t&& {\r\n\t\tpadding: 2em 2em 2em 2em;\r\n\t\tmargin-top: 2em;\r\n\t\tmargin-bottom: 2em;\r\n\t\tbackground-color: #fafafa;\r\n\t}\r\n`;\r\n","import React, { useContext } from 'react';\nimport './App.css';\nimport Quiz from './components/Quiz/Quiz';\nimport Results from './components/Results/Results';\nimport StartMenu from './components/StartMenu';\nimport { QuizContext } from './contexts/QuizContext';\nimport { Container } from '@material-ui/core';\nimport { QuizContainer } from './components/StyledComponents/StyledContainers';\n\nfunction App() {\n\tconst quizContext = useContext(QuizContext);\n\tconst { status } = quizContext.state;\n\n\tlet display = <StartMenu />;\n\tif (status === 1) {\n\t\tdisplay = <Results />;\n\t} else if (status === 2) {\n\t\tdisplay = <Quiz />;\n\t}\n\n\treturn (\n\t\t<Container maxWidth=\"sm\">\n\t\t\t<QuizContainer>{display}</QuizContainer>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport QuizContextProvider from './contexts/QuizContext';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<QuizContextProvider>\n\t\t<App />\n\t</QuizContextProvider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}